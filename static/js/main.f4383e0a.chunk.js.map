{"version":3,"sources":["index.js"],"names":["ControlMode","name","Object","_home_runner_work_infinite_canvas_infinite_canvas_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__","this","Mouse","Trackpad","Shape","id","x","y","dragging","KeyState","Up","Down","Hold","KeyStateHistory","previous","current","Initial","Key","downEventListenerType","upEventListenerType","buttonCode","keyState","key","_useState","useState","_useState2","_home_runner_work_infinite_canvas_infinite_canvas_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","stateHistory","setStateHistory","holdIntervalRef","React","useRef","useEffect","handler","event","button","state","enqueue","setInterval","document","addEventListener","removeEventListener","clearInterval","MouseLeft","MouseRight","App","_useState3","JSON","parse","localStorage","getItem","map","shape","assign","e","console","warn","_useState4","shapes","setShapes","_useState5","_useState6","viewportCoordinates","setViewportCoordinates","mouseLeftStateHistory","mouseRightStateHistory","_useState7","_useState8","canvasPanEnabled","setCanvasPanEnabled","_useState9","controlModeCookieValue","keys","find","controlMode","toLowerCase","_useState10","setControlMode","deltaX","deltaY","preventDefault","movementX","movementY","setItem","stringify","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","Fragment","style","position","border","padding","zIndex","backgroundColor","type","value","checked","onChange","toString","target","Error","shapeEdgeLength","window","innerWidth","innerHeight","top","onClick","uuidv4","concat","_home_runner_work_infinite_canvas_infinite_canvas_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","handleAddRect","react_konva__WEBPACK_IMPORTED_MODULE_7__","width","height","draggable","onDragStart","el","_home_runner_work_infinite_canvas_infinite_canvas_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","onDragEnd","fill","text","wrap","render","getElementById"],"mappings":"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","file":"static/js/main.f4383e0a.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { render } from \"react-dom\";\nimport { Group, Layer, Rect, Stage, Text } from \"react-konva\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass ControlMode {\n  static Mouse = new ControlMode(\"mouse\");\n  static Trackpad = new ControlMode(\"trackpad\");\n\n  constructor(name) {\n    this.name = name;\n  }\n}\n\nclass Shape {\n  constructor(id, x, y, dragging) {\n    this.id = id;\n    this.x = x;\n    this.y = y;\n    this.dragging = dragging;\n  }\n}\n\nclass KeyState {\n  static Up = new KeyState(\"up\");\n  static Down = new KeyState(\"down\");\n  static Hold = new KeyState(\"hold\");\n\n  constructor(name) {\n    this.name = name;\n  }\n}\n\nclass KeyStateHistory {\n  static Initial = new KeyStateHistory(null, KeyState.Up);\n\n  constructor(previous, current) {\n    this.previous = previous;\n    this.current = current;\n  }\n\n  enqueue(current) {\n    return new KeyStateHistory(this.current, current);\n  }\n}\n\nclass Key {\n  static MouseLeft = new Key(\"mousedown\", \"mouseup\", 0);\n  static MouseRight = new Key(\"mousedown\", \"mouseup\", 2);\n\n  constructor(downEventListenerType, upEventListenerType, buttonCode) {\n    this.downEventListenerType = downEventListenerType;\n    this.upEventListenerType = upEventListenerType;\n    this.buttonCode = buttonCode;\n  }\n}\n\nfunction keyState(key) {\n  const [stateHistory, setStateHistory] = useState(KeyStateHistory.Initial);\n  const holdIntervalRef = React.useRef(null);\n\n  const startHoldIntervalCounter = () => {\n    if (holdIntervalRef.current) return;\n    holdIntervalRef.current = setInterval(() => {\n      setStateHistory((state) => state.enqueue(KeyState.Hold));\n    }, 100);\n  };\n\n  const stopHoldIntervalCounter = () => {\n    if (holdIntervalRef.current) {\n      clearInterval(holdIntervalRef.current);\n      holdIntervalRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    const handler = (event) => {\n      if (event.button === key.buttonCode) {\n        setStateHistory((state) => state.enqueue(KeyState.Down));\n        startHoldIntervalCounter();\n      }\n    };\n    //TODO customize event listener target\n    document.addEventListener(key.downEventListenerType, handler);\n    return () =>\n      document.removeEventListener(key.downEventListenerType, handler);\n  }, []);\n\n  useEffect(() => {\n    const handler = (event) => {\n      if (event.button === key.buttonCode) {\n        stopHoldIntervalCounter();\n        setStateHistory((state) => state.enqueue(KeyState.Up));\n      }\n    };\n    //TODO customize event listener target\n    document.addEventListener(key.upEventListenerType, handler);\n    return () => document.removeEventListener(key.upEventListenerType, handler);\n  }, []);\n\n  return stateHistory;\n}\n\nconst App = () => {\n  const shapeEdgeLength = 100;\n\n  const [shapes, setShapes] = useState(() => {\n    try {\n      const shapes = JSON.parse(localStorage.getItem(\"shapes\"));\n      return shapes.map((shape) => Object.assign(new Shape(), shape));\n    } catch (e) {\n      console.warn(\n        \"Failed to get shapes from localStorage, falling back to default\",\n        e\n      );\n      return [];\n    }\n  });\n\n  const [viewportCoordinates, setViewportCoordinates] = useState(() => {\n    try {\n      return JSON.parse(localStorage.getItem(\"viewportCoordinates\"));\n    } catch (e) {\n      console.warn(\n        \"Failed to get viewportCoordinates from localStorage, falling back to default\",\n        e\n      );\n      return {\n        x: 0,\n        y: 0\n      };\n    }\n  });\n\n  const mouseLeftStateHistory = keyState(Key.MouseLeft);\n  const mouseRightStateHistory = keyState(Key.MouseRight);\n\n  const [canvasPanEnabled, setCanvasPanEnabled] = useState(false);\n\n  //TODO add automatic detection capability\n  const [controlMode, setControlMode] = useState(() => {\n    try {\n      const controlModeCookieValue = localStorage.getItem(\"controlMode\");\n      if (controlModeCookieValue) {\n        return ControlMode[\n          Object.keys(ControlMode).find(\n            (controlMode) =>\n              controlMode.toLowerCase() === controlModeCookieValue\n          )\n        ];\n      } else {\n        return ControlMode.Mouse;\n      }\n    } catch (e) {\n      console.warn(\n        \"Failed to get controlMode from localStorage, falling back to default\",\n        e\n      );\n      return ControlMode.Mouse;\n    }\n  });\n\n  useEffect(() => {\n    if (controlMode === ControlMode.Trackpad) {\n      const handler = (event) => {\n        setViewportCoordinates((state) => ({\n          x: state.x + -event.deltaX,\n          y: state.y + -event.deltaY\n        }));\n      };\n      document.addEventListener(\"wheel\", handler);\n      return () => document.removeEventListener(\"wheel\", handler);\n    }\n  }, [controlMode]);\n\n  useEffect(() => {\n    const handler = (event) => {\n      event.preventDefault();\n    };\n    document.addEventListener(\"contextmenu\", handler);\n    return () => document.removeEventListener(\"contextmenu\", handler);\n  }, []);\n\n  useEffect(() => {\n    setCanvasPanEnabled(mouseRightStateHistory.current === KeyState.Hold);\n  }, [mouseRightStateHistory]);\n\n  useEffect(() => {\n    if (canvasPanEnabled) {\n      const handler = (event) => {\n        setViewportCoordinates((state) => ({\n          x: state.x + event.movementX,\n          y: state.y + event.movementY\n        }));\n      };\n      document.addEventListener(\"mousemove\", handler);\n      return () => document.removeEventListener(\"mousemove\", handler);\n    }\n  }, [canvasPanEnabled]);\n\n  const handleFocusShape = (event) => {\n    const shape = shapes.find(\n      (shape) => shape.id.toString() === event.target.value\n    );\n    if (!shape) {\n      throw new Error(\"Failed to find shape by id.\");\n    } else {\n      setViewportCoordinates({\n        x: -shape.x - shapeEdgeLength / 2 + window.innerWidth / 2,\n        y: -shape.y - shapeEdgeLength / 2 + window.innerHeight / 2\n      });\n    }\n  };\n\n  //TODO debounce\n  useEffect(() => {\n    localStorage.setItem(\n      \"viewportCoordinates\",\n      JSON.stringify(viewportCoordinates)\n    );\n  }, [viewportCoordinates]);\n\n  useEffect(() => {\n    localStorage.setItem(\"controlMode\", controlMode.name);\n  }, [controlMode]);\n\n  const handleAddRect = () => {\n    const shape = new Shape(\n      uuidv4(),\n      -viewportCoordinates.x + window.innerWidth / 2,\n      -viewportCoordinates.y + window.innerHeight / 2,\n      false\n    );\n    setShapes((state) => [...state, shape]);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"shapes\", JSON.stringify(shapes));\n  }, [shapes]);\n\n  return (\n    <>\n      <div\n        style={{\n          position: \"absolute\",\n          border: \"1px solid black\",\n          padding: \"10px\",\n          zIndex: 1,\n          backgroundColor: \"white\"\n        }}\n      >\n        Viewport x:{viewportCoordinates.x} y:{viewportCoordinates.y}\n        <br />\n        Mouse left:{mouseLeftStateHistory.current.name} right:\n        {mouseRightStateHistory.current.name}\n        <br />\n        Canvas pan enabled:{canvasPanEnabled ? \"true\" : \"false\"}\n        <br />\n        Control mode:\n        <div>\n          <input\n            type=\"radio\"\n            value={ControlMode.Mouse.name}\n            name=\"control-mode\"\n            checked={controlMode === ControlMode.Mouse}\n            onChange={() => setControlMode(ControlMode.Mouse)}\n          />{\" \"}\n          {ControlMode.Mouse.name}\n          <input\n            type=\"radio\"\n            value={ControlMode.Trackpad.name}\n            name=\"control-mode\"\n            checked={controlMode === ControlMode.Trackpad}\n            onChange={() => setControlMode(ControlMode.Trackpad)}\n          />{\" \"}\n          {ControlMode.Trackpad.name}\n        </div>\n        Focus shape:\n        <select value=\"\" onChange={handleFocusShape}>\n          <option value=\"\" />\n          {shapes.map((shape) => {\n            return (\n              <option key={shape.id} value={shape.id}>\n                {shape.id}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n      <div\n        style={{\n          position: \"absolute\",\n          border: \"1px solid black\",\n          padding: \"10px\",\n          zIndex: 1,\n          top: \"200px\",\n          backgroundColor: \"white\"\n        }}\n      >\n        <button onClick={() => handleAddRect()}>Add Rect</button>\n      </div>\n      <Stage width={window.innerWidth - 20} height={window.innerHeight - 20}>\n        <Layer>\n          {shapes.map((shape) => (\n            <Group\n              key={shape.id}\n              x={shape.x + viewportCoordinates.x}\n              y={shape.y + viewportCoordinates.y}\n              draggable\n              onDragStart={() => {\n                setShapes((shapes) =>\n                  shapes.map((el) =>\n                    el.id === shape.id ? { ...el, dragging: true } : el\n                  )\n                );\n              }}\n              onDragEnd={(event) => {\n                setShapes((shapes) =>\n                  shapes.map((el) =>\n                    el.id === shape.id\n                      ? {\n                          ...el,\n                          dragging: false,\n                          x: event.target.x() - viewportCoordinates.x,\n                          y: event.target.y() - viewportCoordinates.y\n                        }\n                      : el\n                  )\n                );\n              }}\n            >\n              <Rect\n                width={shapeEdgeLength}\n                height={shapeEdgeLength}\n                fill={shape.dragging ? \"black\" : \"green\"}\n              />\n              <Text\n                x={shapeEdgeLength / 4}\n                y={shapeEdgeLength / 6}\n                text={shape.id}\n                fill={shape.dragging ? \"green\" : \"black\"}\n                wrap=\"char\"\n                width={shapeEdgeLength / 2}\n              />\n            </Group>\n          ))}\n        </Layer>\n      </Stage>\n    </>\n  );\n};\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}